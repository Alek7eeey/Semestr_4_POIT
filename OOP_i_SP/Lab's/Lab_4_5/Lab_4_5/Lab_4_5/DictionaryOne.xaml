<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <LinearGradientBrush x:Key="buttonBrush">
        <GradientStopCollection>
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="Orange" Offset="1" />
        </GradientStopCollection>
    </LinearGradientBrush>

    <BitmapImage x:Key="HeaderImageSource" UriSource="/Image/HeaderPhoto2.png" />
    <Style TargetType="Image" x:Key="HeaderImageStyle">
        <Setter Property="Source" Value="{StaticResource HeaderImageSource}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Stretch" Value="UniformToFill" />
    </Style>
    
    <BitmapImage x:Key="FlagUKR" UriSource="image/FlagUkraine.png"/>
    <Style TargetType="Image" x:Key="FlagImageStyle">
        <Setter Property="Source" Value="{StaticResource FlagUKR}"/>
        <Setter Property="Width" Value="30px"/>
    </Style>
    <BitmapImage x:Key="FlagUSA" UriSource="image/FlagUSA.png"/>
    <Style TargetType="Image" x:Key="styleFlagUSA">
        <Setter Property="Source" Value="{StaticResource FlagUSA}"/>
        <Setter Property="Width" Value="30px"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
    </Style>
    <BitmapImage x:Key="FlagBelarus" UriSource="image/FlagBelarus.png"/>
    <Style TargetType="Image" x:Key="styleFlagBelarus">
        <Setter Property="Source" Value="{StaticResource FlagBelarus}"/>
        <Setter Property="Width" Value="30px"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
    </Style>

    <Style x:Key="styleNameListSouvenir" TargetType="TextBlock">
        
        <Style.Setters>
        <Setter Property="Text" Value="{DynamicResource ListSouv}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Jost Thin"/>
        <Setter Property="Margin" Value="0 8 0 0"/>
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        </Style.Setters>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="#F6623E" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BelSouvnirStyle" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Text" Value="BelSouvenirs"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Jost"/>
            <Setter Property="Margin" Value="15 0 0 0"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="164px"/>
            <Setter Property="Foreground" Value="#FFF6623E"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="ForceCursor" Value="True"/>
        </Style.Setters>

        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName = GrowRate, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName = waneRate, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName = GrowPrice, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName = GrowPrice, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName = wanePrice, Path=IsChecked}" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StyleAddProduct" TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Text" Value="{DynamicResource addProduct}"/>
            <Setter Property="FontFamily" Value="Jost ExtraLight"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
            <Setter Property="FontSize" Value="12"/>
        </Style.Setters>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.4"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    To="Red" Duration="0:0:0.4"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                    To="Black" Duration="0:0:0.4"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="Button" x:Key="btnTemplate">
        <Border CornerRadius="25"  BorderThickness="2" Background="{StaticResource buttonBrush}">
            <ContentControl Content="{DynamicResource CorrectButton}" />
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="btnTemplate2">
        <Border CornerRadius="25"  BorderThickness="2" Background="{StaticResource buttonBrush}">
            <ContentControl Content="{DynamicResource Correct}" />
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="btnTemplate3">
        <Border CornerRadius="25"  BorderThickness="2" Background="{StaticResource buttonBrush}">
            <ContentControl Content="{DynamicResource CorrectButton2}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="btnTemplate4">
        <Border CornerRadius="25"  BorderThickness="2" Background="{StaticResource buttonBrush}">
            <ContentControl Content="{DynamicResource CorrectButton3}"/>
        </Border>
    </ControlTemplate>


</ResourceDictionary>