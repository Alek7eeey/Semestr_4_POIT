//Обычное тестирование (ПРИМЕР)
package by.test;
import by.comapany.company;
import by.employee.employee;
import com.beust.jcommander.Parameter;
import org.testng.Assert;
import org.testng.annotations.*;
import java.util.ArrayList;

import static org.testng.Assert.*;
public class testCompany {
    private company testCompany;
    private employee testEmployee1;
    private employee testEmployee2;

    @BeforeMethod
    public void setUp() {
        testCompany = new company();
        testEmployee1 = new employee("John", 15, true);
        testEmployee2 = new employee("Vadim", 5, false);
    }

    @AfterSuite
    public void end()
    {
        System.out.println("Тест закончен!");
    }

    @Test (enabled = false) //не будет выполняться
    public void addNewEmployee() {
        testCompany.addNewEmployee(testEmployee1);
        assertTrue(testCompany.arrEmpl.contains(testEmployee1));
    }

    @Test(timeOut = 1100)
    public void removeEmployee() throws InterruptedException {
        testCompany.arrEmpl.add(testEmployee1);
        testCompany.removeEmployee(testEmployee1);
        Thread.sleep(1000); //эмуляция затраты времения для тайм аута
        assertFalse(testCompany.arrEmpl.contains(testEmployee1));
    }

    @Test
    public void removeNonexistentEmployee() {
        testCompany.removeEmployee(testEmployee1);
        assertFalse(testCompany.arrEmpl.contains(testEmployee1));
    }


    @Test
    public void testGetAllEmpl() {
        testCompany.addNewEmployee(testEmployee1);
       // testCompany.addNewEmployee(testEmployee2);
        String str = "John 15 true \n";
        assertEquals(str, testCompany.getAllEmpl());
    }

}

//Параметризованный тест (из xml-а)

//XML

<?xml version="1.0" encoding="UTF-8"?>
<tests>
    <test>
        <input>a</input>
        <output>1</output>
    </test>
    <test>
        <input>b</input>
        <output>2</output>
    </test>
</tests>

//Сам класс

public class TestNGDataProvider {

    @DataProvider(name = "testData")
    public Object[][] readTestData() {
        try {
            File inputFile = new File("src/testng.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(inputFile);
            doc.getDocumentElement().normalize();

            NodeList nodeList = doc.getElementsByTagName("test");
            Object[][] testData = new Object[nodeList.getLength()][2];

            for (int i=0; i < nodeList.getLength(); i++) {
                Element element = (Element) nodeList.item(i);
                testData[i][0] = element.getElementsByTagName("input").item(0).getTextContent();
                testData[i][1] = element.getElementsByTagName("output").item(0).getTextContent();
            }
            return testData;

        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    @Test(dataProvider = "testData")
    public void test(String input, String expectedOutput) {
        int actualOutput = myFunction(input);
        Assert.assertEquals(actualOutput, Integer.parseInt(expectedOutput));
    }

    public int myFunction(String input) {
        // Implement your function here
        return input.equals("a") ? 1 : 2;
    }
}
